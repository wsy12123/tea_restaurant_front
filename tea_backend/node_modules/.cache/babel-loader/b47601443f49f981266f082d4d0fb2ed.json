{"remainingRequest":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\babel-loader\\lib\\index.js!D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\尚硅谷\\uniapp_storage\\tea_backend\\src\\components\\test.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\src\\components\\test.vue","mtime":1671274699891},{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667713506232},{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667713515975},{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667713506232},{"path":"D:\\尚硅谷\\uniapp_storage\\tea_backend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667713514172}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      path: \"ws://localhost:8080/webSocket\",\n      socket: \"\"\n    };\n  },\n  mounted: function mounted() {\n    // 初始化\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      if (typeof WebSocket === \"undefined\") {\n        alert(\"您的浏览器不支持socket\");\n      } else {\n        // 实例化socket\n        this.socket = new WebSocket(this.path); // 监听socket连接\n\n        this.socket.onopen = this.open; // 监听socket错误信息\n\n        this.socket.onerror = this.error; // 监听socket消息\n\n        this.socket.onmessage = this.getMessage;\n      }\n    },\n    open: function open() {\n      console.log(\"socket连接成功\");\n    },\n    error: function error() {\n      console.log(\"连接错误\");\n    },\n    getMessage: function getMessage(msg) {\n      console.log(msg.data);\n    },\n    send: function send() {\n      var code = 4;\n      this.socket.send(code);\n    },\n    close: function close() {\n      console.log(\"socket已经关闭\");\n    }\n  },\n  destroyed: function destroyed() {\n    // 销毁监听\n    this.socket.onclose = this.close;\n  }\n};",{"version":3,"sources":["test.vue"],"names":[],"mappings":";;;;;;AAOA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,+BADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA;AACA,SAAA,IAAA;AACA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,IAAA,EAAA,gBAAA;AACA,UAAA,OAAA,SAAA,KAAA,WAAA,EAAA;AACA,QAAA,KAAA,CAAA,gBAAA,CAAA;AACA,OAFA,MAEA;AACA;AACA,aAAA,MAAA,GAAA,IAAA,SAAA,CAAA,KAAA,IAAA,CAAA,CAFA,CAGA;;AACA,aAAA,MAAA,CAAA,MAAA,GAAA,KAAA,IAAA,CAJA,CAKA;;AACA,aAAA,MAAA,CAAA,OAAA,GAAA,KAAA,KAAA,CANA,CAOA;;AACA,aAAA,MAAA,CAAA,SAAA,GAAA,KAAA,UAAA;AACA;AACA,KAdA;AAeA,IAAA,IAAA,EAAA,gBAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,YAAA;AACA,KAjBA;AAkBA,IAAA,KAAA,EAAA,iBAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,KApBA;AAqBA,IAAA,UAAA,EAAA,oBAAA,GAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA;AACA,KAvBA;AAwBA,IAAA,IAAA,EAAA,gBAAA;AACA,UAAA,IAAA,GAAA,CAAA;AACA,WAAA,MAAA,CAAA,IAAA,CAAA,IAAA;AACA,KA3BA;AA4BA,IAAA,KAAA,EAAA,iBAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,YAAA;AACA;AA9BA,GAXA;AA2CA,EAAA,SA3CA,uBA2CA;AACA;AACA,SAAA,MAAA,CAAA,OAAA,GAAA,KAAA,KAAA;AACA;AA9CA,CAAA","sourcesContent":["<template>\n    <div>\n        <button @click=\"send\">发消息</button>\n    </div>\n</template>\n\n<script>\nexport default {\n    data () {\n        return {\n            path:\"ws://localhost:8080/webSocket\",\n            socket:\"\"\n        }\n    },\n    mounted () {\n        // 初始化\n        this.init()\n    },\n    methods: {\n        init: function () {\n            if(typeof(WebSocket) === \"undefined\"){\n                alert(\"您的浏览器不支持socket\")\n            }else{\n                // 实例化socket\n                this.socket = new WebSocket(this.path)\n                // 监听socket连接\n                this.socket.onopen = this.open\n                // 监听socket错误信息\n                this.socket.onerror = this.error\n                // 监听socket消息\n                this.socket.onmessage = this.getMessage\n            }\n        },\n        open: function () {\n            console.log(\"socket连接成功\")\n        },\n        error: function () {\n            console.log(\"连接错误\")\n        },\n        getMessage: function (msg) {\n            console.log(msg.data)\n        },\n        send: function () {\r\n\t\t\tlet code=4\n            this.socket.send(code)\n        },\n        close: function () {\n            console.log(\"socket已经关闭\")\n        }\n    },\n    destroyed () {\n        // 销毁监听\n        this.socket.onclose = this.close\n    }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/components"}]}